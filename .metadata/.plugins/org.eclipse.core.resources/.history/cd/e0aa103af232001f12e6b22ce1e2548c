// 컴퓨터는 1~100사이의 숫자 하나를 생성한다.
// 총 시도횟수는 7번을 부여한다.
// 사용자는 7번의 시도안에 숫자를 맞춰야 한다.
// 사용자가 숫자를 입력했을때 컴퓨터는 높은지/낮은지 
// 알려준다.
// 7번안에 맞추면 성공, 맞추지 못하면 실패라고 출력한다.
// 성공/실패 후 계속 할지를 물어보고 1이면 게임 재시작, 
// 0이면 프로그램을 종료한다.
// 함수를 사용하여 구현한다.
// 무한루프에 빠지게 된다면 scan.nextLine()을 활용하여 
// 버퍼에 남아있는 Enter키를 제거해주도록 하자.

import java.util.Random;
import java.util.Scanner;

public class QuUpDownGame
{
	public static void playGame()
	{
		Random random = new Random();
		Scanner scanner = new Scanner(System.in);
		
		while(true)
		{
			int target = random.nextInt(100) + 1;
			int attempts = 7;
			
			System.out.println("업/다운 게임! 1~100 사이의 숫자는 맞춰보세요?");
		
			boolean success = false;
			for(int i=1; i<=attempts; i++)
			{
				System.out.println(i + "번째 시도 : ");
				int suppose = scanner.nextInt();
				
				scanner.nextLine();
				
				if(suppose < target)
				{
					System.out.println("UP!");
				}
				else if(suppose > target)
				{
					System.out.println("DOWN!");
				}
				else
				{
					System.out.println("정답! " + i + "번째 시도에 맞췄습니다");
					success = true;
					break;
				}
			}
			
			if(!success)
			{
				System.out.println("실패!");
			}
			
			int continueGame;
			while(true)
			{
				System.out.println("계속? (1:예 0:아니오) : ");
				continueGame = scanner.nextInt();
				
//				scanner.nextLine();
				
				if(continueGame == 1 || continueGame == 0)
				{
					break;
				}
				else
				{
					System.out.println("1과 0만 입력하세요");
				}
			}
			
			
			if(continueGame == 0)
			{
				System.out.println("종료합니다");
				break;
			}
		}
		
		scanner.close();
	}
	
	public static void main(String[] args)
	{
		playGame();
	}

}
